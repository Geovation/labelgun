!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t(require("rbush")):"function"==typeof define&&define.amd?define(["rbush"],t):"object"==typeof exports?exports.labelgun=t(require("rbush")):e.labelgun=t(e.rbush)}(this,function(e){return function(e){function t(l){if(a[l])return a[l].exports;var r=a[l]={i:l,l:!1,exports:{}};return e[l].call(r.exports,r,r.exports,t),r.l=!0,r.exports}var a={};return t.m=e,t.c=a,t.d=function(e,a,l){t.o(e,a)||Object.defineProperty(e,a,{configurable:!1,enumerable:!0,get:l})},t.n=function(e){var a=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(a,"a",a),a},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p="",t(t.s=0)}([function(e,t,a){"use strict";function l(e){if(Array.isArray(e)){for(var t=0,a=Array(e.length);t<e.length;t++)a[t]=e[t];return a}return Array.from(e)}function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(t,"__esModule",{value:!0});var i=function(){function e(e,t){for(var a=0;a<t.length;a++){var l=t[a];l.enumerable=l.enumerable||!1,l.configurable=!0,"value"in l&&(l.writable=!0),Object.defineProperty(e,l.key,l)}}return function(t,a,l){return a&&e(t.prototype,a),l&&e(t,l),t}}(),n=a(1),s=function(e){return e&&e.__esModule?e:{default:e}}(n),o=function(){function e(t,a,l){r(this,e);var i=l||10;this.tree=(0,s.default)(i),this.allLabels={},this.hasChanged=new Set,this.allChanged=!1,this.hideLabel=t,this.showLabel=a}return i(e,[{key:"_total",value:function(e){for(var t=0,a=0,l=Object.keys(this.allLabels);a<l.length;a++)this.allLabels[l[a]].state==e&&(t+=1);return t}},{key:"totalShown",value:function(){return this._total("show")}},{key:"totalHidden",value:function(){return this._total("hide")}},{key:"_getLabelsByState",value:function(e){for(var t=[],a=0,l=Object.keys(this.allLabels);a<l.length;a++)this.allLabels[l[a]].state==e&&t.push(this.allLabels[l[a]]);return t}},{key:"getHidden",value:function(){return this._getLabelsByState("hide")}},{key:"getShown",value:function(){return this._getLabelsByState("show")}},{key:"getCollisions",value:function(e){var t=this.allLabels[e];if(void 0===t)throw Error("Label doesn't exist :"+JSON.stringify(e));var a=this.tree.search(t),l=a.indexOf(t);return void 0!==l&&a.splice(l,1),a}},{key:"getLabel",value:function(e){return this.allLabels[e]}},{key:"destroy",value:function(){this.tree.clear(),this.allLabels={}}},{key:"callLabelCallbacks",value:function(e){var t=this;Object.keys(this.allLabels).forEach(function(a){t._callLabelStateCallback(t.allLabels[a],e)})}},{key:"_callLabelStateCallback",value:function(e,t){var a=t||e.state;"show"===a&&this.showLabel(e),"hide"===a&&this.hideLabel(e)}},{key:"compareLabels",value:function(){var e=this;this.orderedLabels=Object.values(this.allLabels).sort(this._compare),this.orderedLabels.forEach(function(t){var a=e.tree.search(t);(0===a.length||e._allLower(a,t)||t.isDragged)&&(e.allLabels[t.id].state="show")})}},{key:"_allLower",value:function(e,t){for(var a=void 0,l=0;l<e.length;l++)if(a=e[l],"show"===a.state||a.weight>t.weight||a.isDragged)return!1;return!0}},{key:"_compare",value:function(e,t){return e.weight>t.weight?-1:e.weight<t.weight?1:0}},{key:"setupLabelStates",value:function(){var e=this;if(this.allChanged)this.allChanged=!1,this.hasChanged.clear(),this.tree.clear(),Object.keys(this.allLabels).forEach(function(t){var a=e.allLabels[t];e.ingestLabel({bottomLeft:[a.minX,a.minY],topRight:[a.maxX,a.maxY]},a.id,a.weight,a.labelObject,a.name,a.isDragged)});else if(this.hasChanged.size){var t=[].concat(l(this.hasChanged));this.hasChanged.clear(),t.forEach(function(t){var a=e.allLabels[t];a&&e.ingestLabel({bottomLeft:[a.minX,a.minY],topRight:[a.maxX,a.maxY]},a.id,a.weight,a.labelObject,a.name,a.isDragged)})}}},{key:"update",value:function(){this.allChanged=!0,this.setupLabelStates(),this.compareLabels(),this.callLabelCallbacks()}},{key:"_removeFromTree",value:function(e,t){var a=e.id,l=this.allLabels[a];this.tree.remove(l),delete this.allLabels[a],t&&this.callLabelCallbacks(!0)}},{key:"_addToTree",value:function(e){this.allLabels[e.id]=e,this.tree.insert(e)}},{key:"ingestLabel",value:function(e,t,a,l,r,i){if(void 0!==a&&null!==a||(a=0),!e||!e.bottomLeft||!e.topRight)throw Error("Bounding box must be defined with bottomLeft and topRight properties");if("string"!=typeof t&&"number"!=typeof t)throw Error("Label IDs must be a string or a number");var n=this.allLabels[t];n&&this._removeFromTree(n);var s={minX:e.bottomLeft[0],minY:e.bottomLeft[1],maxX:e.topRight[0],maxY:e.topRight[1],state:"hide",id:t,weight:a,labelObject:l,name:r,isDragged:i};this._addToTree(s)}},{key:"labelHasChanged",value:function(e){this.hasChanged.add(e)}}]),e}();t.default=o},function(t,a){t.exports=e}])});